<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devOps on ^^</title><link>https://aneesahammed.github.io/tags/devops/</link><description>Recent content in devOps on ^^</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 20 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://aneesahammed.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>DevOps at scale: GitHub</title><link>https://aneesahammed.github.io/posts/devops-practice-github/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://aneesahammed.github.io/posts/devops-practice-github/</guid><description>I&amp;rsquo;m documenting some DevOps practices and personal recommendations we follow, especially around source control with Git and GitHub.
Working as a Lead DevOps Engineer at one of the biggest financial enterprises, SOC compliance is absolutely critical. Staying SOC compliant while scaling hundreds of projects and engineers? That&amp;rsquo;s nearly impossible without consistent team-wide practices and policies.
TL;DR Have standard naming convention. Follow trunk-based development. Always protect the master &amp;amp; develop branch.</description></item><item><title>RabbitMQ üê∞</title><link>https://aneesahammed.github.io/posts/rabbitmq/</link><pubDate>Mon, 05 Nov 2018 11:36:55 +0100</pubDate><guid>https://aneesahammed.github.io/posts/rabbitmq/</guid><description>_______________ &amp;lt; Im not rabbit!! &amp;gt; --------------- \ ^__^ \ (oo)\_______ (__)\ )\/\ ||----w | || || Today at work, had to demonstrate a proof of concept (POC) related to message queues, so need to spin-up a rabbitmq server. &amp;ldquo;Play with Docker&amp;rdquo; come to the rescue. In couple of minutes environment is up and ready.
docker run -d \ --hostname rabbit-host \ --name rabbit-container \ -p 80:15672 \ -p 5672:5672 \ -e RABBITMQ_DEFAULT_USER=&amp;quot;rabbit&amp;quot; \ -e RABBITMQ_DEFAULT_PASS=&amp;quot;carrot&amp;quot; \ rabbitmq:3-management PORT Description 15672 RabbitMQ Management console uses PORT 15672 for RabbitMQ version 3.</description></item><item><title>Play with docker üê≥</title><link>https://aneesahammed.github.io/posts/play-with-docker/</link><pubDate>Wed, 31 Oct 2018 10:36:55 +0000</pubDate><guid>https://aneesahammed.github.io/posts/play-with-docker/</guid><description>üê≥ Prerequisite Make sure you have already created a Docker Hub account.
PWD This post is about &amp;ldquo;Play with Docker&amp;rdquo; chrome-extension. Play with Docker(PWD) by itself is a simple, interactive and fun playground to learn Docker. This will give you a throwaway *nix shell, in which you can safely play with docker.
The extension adds a &amp;ldquo;Try in PWD&amp;rdquo; button on any Docker Hub image page. Here is a short demo of the same.</description></item><item><title>CURL</title><link>https://aneesahammed.github.io/posts/curl/</link><pubDate>Mon, 29 Oct 2018 11:36:55 +0100</pubDate><guid>https://aneesahammed.github.io/posts/curl/</guid><description>As part of my journey as a developer and decision to document my learning, I&amp;rsquo;ve been thinking of writing a short post regarding curl, here it is.
Curl is a command line tool for transferring data to and from a server. Curl stands for Client URL and was developed by a Swedish developer Daniel Stenberg @bagder.
It covers many protocols like HTTP, FTP, IMAP, POP3 &amp;amp; SMTP, It usually comes pre-installed in most of Linux distros and modern versions of OS X.</description></item></channel></rss>